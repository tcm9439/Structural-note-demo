import{_ as k}from"./note.vue.75cafe67.js";import{d as C,Z as _,U as T,r as O,a0 as R,a1 as y,a2 as m,a3 as F,a4 as M,a5 as o,a6 as f,a7 as N,a8 as x,a9 as G,aa as U,ab as h,ac as p,ad as r,J as A,q,P as B,Y as D,l as P}from"./entry.36e81a40.js";import"./_plugin-vue_export-helper.c27b6911.js";import"./NoteExportHandler.83570409.js";import"./Icon.e9f4e17f.js";const z=C({__name:"index",setup(Y){const{$viewState:c,$emitter:b}=P();c.last_page=_.TEST,b.emit(T.LAYOUT_UPDATE,_.TEST);let s=O(new R("My first note"));c.setOpenNote(s.value);let l=new y("Section 1"),v=new m("Hello world."),E=new m("======> Yeah <======"),V=new F("## Markdown element\n`some code`");l.elements.add(v),l.elements.add(E),l.elements.add(V),s.value.sections.add(l);let e=new M("Section struct"),t=new o("test string attr",f.instance,"description 1");t.setGetAllRelatedValuesFunc(e.getValuesOfAttr.bind(e)),t.addConstraint(new N);let i=new o("test string attr2",f.instance);i.setGetAllRelatedValuesFunc(e.getValuesOfAttr.bind(e)),i.addConstraint(new x);let d=new o("test markdown attr",G.instance);d.setGetAllRelatedValuesFunc(e.getValuesOfAttr.bind(e));let u=new o("test enum attr",U.instance),w=u.getConstraint(h.ENUM);w.addAvailableValue("EnumOne"),w.addAvailableValue("EnumTwo"),u.setGetAllRelatedValuesFunc(e.getValuesOfAttr.bind(e)),e.definition.display_key.addKey(t),e.definition.attributes.add(t),e.definition.attributes.add(i),e.definition.attributes.add(d),e.definition.attributes.add(u);let n=new p(e.definition),a=new r(t,"Random value");n.values.set(t.id,a),a=new r(i,"Foo"),n.values.set(i.id,a),a=new r(d,"### Markdown value\n`some other code`"),n.values.set(d.id,a),e.elements.add(n);let S=new m("ABCDEFG");return e.elements.add(S),n=new p(e.definition),a=new r(t,"Random value"),n.values.set(t.id,a),e.elements.add(n),s.value.sections.add(e),($,H)=>{const g=k;return A(s)!==null?(q(),B(g,{key:0,note:A(s)},null,8,["note"])):D("",!0)}}});export{z as default};
